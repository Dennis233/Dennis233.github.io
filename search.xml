<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>通信网基础</title>
      <link href="/2022/12/11/%E9%80%9A%E4%BF%A1%E7%BD%91%E5%9F%BA%E7%A1%80/"/>
      <url>/2022/12/11/%E9%80%9A%E4%BF%A1%E7%BD%91%E5%9F%BA%E7%A1%80/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章-概论"><a href="#第一章-概论" class="headerlink" title="第一章 概论"></a>第一章 概论</h1><h2 id="计算机网络逻辑组成"><a href="#计算机网络逻辑组成" class="headerlink" title="计算机网络逻辑组成"></a>计算机网络逻辑组成</h2><ul><li><code>资源子网</code>的任务是负责全网的信息处理</li><li><code>通信子网</code>的主要任务是将各种计算机互连起来完成数据传输、交换和通信处理</li></ul><h2 id="网络的拓扑结构"><a href="#网络的拓扑结构" class="headerlink" title="网络的拓扑结构"></a>网络的拓扑结构</h2><ul><li>总线型<ul><li>优点：结构简单，价格低廉、安装使用方便</li><li>缺点：故障诊断和隔离比较困难</li></ul></li><li>星型<ul><li>优点：单点故障不影响全网，结构简单。增删节点及维护管理容易；故障隔离和检测容易，延迟时间较短。</li><li>缺点：成本较高，资源利用率低；网络性能过于依赖中心节点</li></ul></li><li>树型<ul><li>优点：结构比较简单，成本低。扩充节点方便灵活。</li><li>缺点：对根的依赖性大</li></ul></li><li>环型<ul><li>优点：简化路径选择控制，传输延迟固定,实时性强,可靠性高。 </li><li>缺点：节点过多时,影响传输效率。环某处断开会导致整个系统的失效，节点的加入和撤出过程复杂</li></ul></li><li>网状<ul><li>优点：具有<code>较高的可靠性</code>。某一线路或节点有故障时，不会影响整个网络的工作。 </li><li>缺点：<code>结构复杂</code>，需要路由选择和流控制功能，网络控制软件复杂，硬件成本较高，不易管理和维护</li></ul></li></ul><h2 id="计算机网络的分类"><a href="#计算机网络的分类" class="headerlink" title="计算机网络的分类"></a>计算机网络的分类</h2><p>按地理范围分：</p><blockquote><ul><li><blockquote><p>局域网</p><p>特点：</p><ol><li>覆盖的地理范围较小</li><li>数据传输速率高（10Mb&#x2F;s～10Gb&#x2F;s）</li><li>通信延迟时间短，可靠性较高</li><li>可以支持多种传输介质</li><li>拓扑结构常用总线型和环型</li></ol></blockquote></li><li>城域网</li><li>广域网</li></ul></blockquote><p>按网络交换方式：</p><blockquote><ul><li><blockquote><p>电路交换网</p><p>特点：通话的两个用户<code>始终占用</code>端到端的通信资源</p></blockquote></li><li><blockquote><p>报文交换网</p><p>特点：</p><ol><li>无连接服务</li><li>存储转发</li><li>资源共享</li></ol></blockquote></li><li><blockquote><p>分组交换网</p><p>特点：</p><ol><li>分组</li><li>存储转发</li><li>资源共享</li></ol></blockquote></li></ul></blockquote><h2 id="计算机网络的性能指标✨"><a href="#计算机网络的性能指标✨" class="headerlink" title="计算机网络的性能指标✨"></a>计算机网络的性能指标✨</h2><ol><li>速率<ul><li>数据的传送速率</li></ul></li><li>带宽</li><li>吞吐量<ul><li>单位时间内通过某个网络（或信道、接口）的实际数据量</li></ul></li><li>分组交换网络的时延</li></ol><blockquote><ol><li>传输时延（发送时延）</li></ol><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221123130124902.png" alt="image-20221123130124902" style="zoom:50%;" /><ol start="2"><li>处理时延</li><li>排队时延</li><li>传播时延</li></ol><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221123130424496.png" alt="image-20221123130424496" style="zoom:50%;" /><blockquote><ul><li><p><code>发送时延</code>发生在<code>机器内部的发送器</code>中，与传输信道的长度（或信号传送的距离）没有任何关系。</p></li><li><p><code>传播时延</code>则发生在<code>机器外部的传输信道媒体</code>上，而与信号的发送速率无关。信号传送的距离越远，传播时延就越大。</p></li></ul></blockquote><ul><li>总时延 &#x3D; 发送时延+传播时延+处理时延+排队时延</li></ul></blockquote><ol start="5"><li>丢包率</li></ol><ul><li>在一定的时间范围内，分组在传输过程中丢失的分组数量与总的分组数量的比率</li></ul><ol start="6"><li><p>时延带宽积</p><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221123131637960.png" alt="image-20221123131637960" style="zoom:50%;" />$$时延带宽积 = 传播时延 × 带宽$$</li><li><p>往返时间RTT</p></li></ol><blockquote><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221123131846153.png" alt="image-20221123131846153" style="zoom: 80%;" /><ul><li>表示从发送方<code>发送完数据</code>，到发送方<code>收到来自接收方的确认</code>总共经历的时间</li></ul></blockquote><ol start="8"><li>利用率<ul><li>当信道的利用率增大时，该信道引起的时延迅速增加。</li></ul></li></ol><h1 id="第二章-数据通信基础知识"><a href="#第二章-数据通信基础知识" class="headerlink" title="第二章 数据通信基础知识"></a>第二章 数据通信基础知识</h1><h2 id="数据通信系统的模型"><a href="#数据通信系统的模型" class="headerlink" title="数据通信系统的模型"></a>数据通信系统的模型</h2><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221123132514918.png" alt="image-20221123132514918" style="zoom:67%;" /><h2 id="数字编码✨"><a href="#数字编码✨" class="headerlink" title="数字编码✨"></a>数字编码✨</h2><ol><li><p>不归零码（NRZ）</p><ul><li>信号波形在一个码元全部时间内发出或不发出电流，每一位码占全部码元的宽度</li></ul></li><li><p>曼彻斯特编码</p><ul><li>规定在<code>每个码元的中间</code>发生跳变</li><li><del>高→低的跳变代表0，低→高的跳变代表1</del>👈🤣<code>正负跳变的含义自定</code></li><li>每个码元中间都要发生跳变，接收端可将此变化提取出来作为同步信号，这种编码也称为<code>自同步码</code></li></ul></li><li><p>差分曼彻斯特编码</p><ul><li><code>每个码元的中间</code>发生跳变</li><li>用<code>码元开始处</code>有无跳变来表示0和1：<code>有跳变代表0，无跳变代表1</code></li></ul></li></ol><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221123133821810.png" alt="image-20221123133821810" style="zoom:75%;" /><h2 id="传输媒体"><a href="#传输媒体" class="headerlink" title="传输媒体"></a>传输媒体</h2><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221123134132508.png" alt="image-20221123134132508" style="zoom: 80%;" /><h2 id="数据通信方式"><a href="#数据通信方式" class="headerlink" title="数据通信方式"></a>数据通信方式</h2><ul><li>按照信号传送方向与时间的关系，可分为：<ol><li>单工通信</li><li>半双工通信</li><li>全双工通信</li></ol></li></ul><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221123134310190.png" alt="image-20221123134310190" style="zoom: 50%;" /><ul><li><p>按传输方式，可分为：</p><ol><li>并行传输</li><li>串行传输</li></ol></li><li><p>串行通信的同步方式分为：</p><ol><li>同步传输</li><li>异步传输</li></ol></li></ul><h2 id="交换技术"><a href="#交换技术" class="headerlink" title="交换技术"></a>交换技术</h2><ul><li><p>电路交换</p><ul><li>面向连接</li><li>传输延迟小</li><li>系统效率低</li></ul></li><li><p>报文交换</p><ul><li><p>工作原理：<code>存储转发</code></p></li><li><p>每个报文由<code>报头、正文和报尾</code>3部分组成，报头中包含发送计算机的地址和接收信息的计算机地址</p></li><li><p>电路利用率高</p></li><li><p>数据的传输延迟比较长</p></li></ul></li><li><p>分组交换</p><ul><li>数据报方式<ul><li>每一个分组都可以<code>独立地选择</code>一条传输路径</li><li>每个分组在通信子网中可能是通过<code>不同的传输路径</code>到达目的主机</li><li>同一报文的不同分组到达目的结点时可能出现<code>乱序、重复与丢失现象</code></li><li>每一个分组在传输过程中都必须带有<code>目的地址与源地址</code></li></ul></li><li>虚电路方式（面向连接）<ul><li>在数据传输前也要建立一条传输通路，但这条通络是<code>逻辑的而非物理的</code></li><li>虚电路可以通过呼叫请求建立，并赋予<code>虚电路号</code>，结点之间通过虚电路号将分组逐站传递</li><li>所有分组都通过这条虚电路<code>顺序传送</code>，结点只需要做差错检测，而<code>不需要做路径选择</code></li><li>每个结点可以和任何结点建立<code>多条虚电路连接</code></li></ul></li></ul></li></ul><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221123142019241.png" alt="image-20221123142019241" style="zoom: 67%;" /><h2 id="物理层协议"><a href="#物理层协议" class="headerlink" title="物理层协议"></a>物理层协议</h2><ul><li>物理层要尽可能<code>屏蔽</code>掉物理设备、传输媒体和通信手段的不同</li><li>给其服务用户（数据链路层）在一条物理的传输媒体上传送和接收比特流（一般为串行按顺序传输的比特流）的能力</li></ul><h1 id="第三章-网络体系结构与协议"><a href="#第三章-网络体系结构与协议" class="headerlink" title="第三章 网络体系结构与协议"></a>第三章 网络体系结构与协议</h1><h2 id="网络协议"><a href="#网络协议" class="headerlink" title="网络协议"></a>网络协议</h2><p>✨三要素：</p><ul><li>语法</li><li>语义</li><li>同步</li></ul><h2 id="OSI参考模型"><a href="#OSI参考模型" class="headerlink" title="OSI参考模型"></a>OSI参考模型</h2><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221123143659963.png" alt="image-20221123143659963" style="zoom:67%;" /><ul><li>将系统中能提供某种或某类型服务功能的逻辑构造称为层</li><li><code>同层次</code>进程通信的<code>协议</code>及<code>相邻层</code>之间的<code>接口</code>服务</li><li><code>实体</code>(entity) 表示任何可发送或接收信息的硬件或软件进程。 协议是控制<code>两个对等实体</code>进行通信的规则的集合</li></ul><blockquote><p>各层完成的主要功能：</p><ul><li><p>差错控制：使相应层次对等方的通信更加可靠</p></li><li><p>流量控制：发送端的发送速率必须使接收端来得及接收，不要太快</p></li><li><p>分段和重装：发送端将要发送的数据块划分为更小的单位，在接收端将其还原</p></li><li><p>复用和分用：发送端几个高层会话复用一条低层的连接，在接收端再进行分用</p></li><li><p>连接建立和释放：交换数据前先建立一条逻辑连接，数据传送结束后释放连接</p></li></ul></blockquote><h2 id="OSI-x2F-RM各层的功能✨"><a href="#OSI-x2F-RM各层的功能✨" class="headerlink" title="OSI&#x2F;RM各层的功能✨"></a>OSI&#x2F;RM各层的功能✨</h2><ol><li><p>物理层</p><ul><li>实现比特的传输</li><li>利用物理传输介质为数据链路层提供物理联接，以透明地传送比特流</li></ul></li><li><p>数据链路层</p><ul><li>将源机网络层来的数据<code>可靠</code>地传输到<code>相邻节点</code>的目标机网络层</li><li>组帧</li><li>流量控制</li></ul></li></ol><ul><li>差错控制</li></ul><ol start="3"><li><p>网络层</p><ul><li>进行<code>路由选择</code>，使数据分组跨越各个子网从<code>源地址传送到目的地址</code></li><li>向传输层提供的服务类型：<code>数据报和虚电路</code>服务</li><li><code>网络层包含有逻辑地址</code>，这些地址在从最初的源地址到最终的目的地址的过程是<code>不变</code>的。但当包由一个网络到达另一个网络时，<code>物理地址会发生改变</code></li></ul></li><li><p>传输层</p><ul><li>第一个<code>端到端</code>，也就是主机到主机的层次</li><li>负责<code>整个报文从源端到目的端</code>的传递过程</li><li>处理端到端的差错控制、流量控制</li></ul></li><li><p>会话层</p><ul><li>提供进程间会话连接的建立、维持和中止功能</li><li>在数据流中插入适当的<code>同步点</code>，当发生差错时，可以从同步点重新进行会话，而不需要重新发送全部数据</li></ul></li><li><p>表示层</p><ul><li>完成语法格式转换：在计算机所处理的数据格式与网络传输所需要的数据格式之间进行转换</li><li>翻译、加密、压缩</li></ul></li><li><p>应用层</p><ul><li>计算机网络与用户之间的界面，由若干个应用进程(或程序)组成，包括电子邮件、目录服务、文件传输等应用程序</li></ul></li></ol><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221123151229717.png" alt="image-20221123151229717" style="zoom:67%;" /><h2 id="五层协议的原理体系结构"><a href="#五层协议的原理体系结构" class="headerlink" title="五层协议的原理体系结构"></a>五层协议的原理体系结构</h2><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221123151325986.png" alt="image-20221123151325986" style="zoom:67%;" /><h2 id="TCP-x2F-IP参考模型"><a href="#TCP-x2F-IP参考模型" class="headerlink" title="TCP&#x2F;IP参考模型"></a>TCP&#x2F;IP参考模型</h2><ol><li><p>应用层</p><ul><li>为用户提供网络服务</li></ul></li><li><p>传输层</p><ul><li>提供可靠的数据流传输服务，确保<code>端到端</code>应用进程间无差错地的通信，常称为端到端通信</li><li>TCP是一种可靠的面向连接协议</li><li>UDP是一种不可靠的无连接协议</li></ul></li><li><p>互联层</p><ul><li>负责异构网或同构网<code>进程间的通信</code>，将传输层分组封装为数据报格式进行传送，每个数据报必须包含目的地址和源地址</li><li>IP协议是无连接的、提供“尽力而为”服务的网络层协议</li></ul></li><li><p>网络接口层</p><ul><li>负责与物理网络的连接</li></ul></li></ol><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221123152010619.png" alt="image-20221123152010619" style="zoom:67%;" /><h1 id="第四章-数据链路层"><a href="#第四章-数据链路层" class="headerlink" title="第四章 数据链路层"></a>第四章 数据链路层</h1><h2 id="三个基本问题"><a href="#三个基本问题" class="headerlink" title="三个基本问题"></a>三个基本问题</h2><h3 id="帧定界"><a href="#帧定界" class="headerlink" title="帧定界"></a>帧定界</h3><ul><li>封装成帧(framing)就是在一段数据的前后分别<code>添加首部和尾部</code>，确定帧的界限</li></ul><h3 id="透明传输"><a href="#透明传输" class="headerlink" title="透明传输"></a>透明传输</h3><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221123181918331.png" alt="image-20221123181918331" style="zoom: 67%;" /><h3 id="差错检测"><a href="#差错检测" class="headerlink" title="差错检测"></a>差错检测</h3><ul><li>在一段时间内，传输错误的比特占所传输比特总数的比率称为<code>误码率 BER (Bit Error Rate)</code></li></ul><h4 id="循环冗余码CRC"><a href="#循环冗余码CRC" class="headerlink" title="循环冗余码CRC"></a>循环冗余码CRC</h4><ul><li>校验和（checksum）加在帧尾，使带校验和的帧的多项式能被P(x)除尽；收方接收时，用P(x)去除它，若有余数，则检测传输出错</li></ul><h2 id="流量控制"><a href="#流量控制" class="headerlink" title="流量控制"></a>流量控制</h2><ul><li>基本方法：接收方控制发送方的数据流量</li><li>接收缓存大小：一个数据帧大小</li></ul><h3 id="停止等待协议"><a href="#停止等待协议" class="headerlink" title="停止等待协议"></a>停止等待协议</h3><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221124210813023.png" alt="image-20221124210813023" style="zoom:67%;" /><blockquote><p>出现问题1：死锁</p><ul><li>出现的原因：<ol><li>数据帧丢失</li><li>确认帧丢失</li></ol></li><li>解决方法：超时重传</li></ul></blockquote><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221124215941027.png" alt="image-20221124215941027" style="zoom:67%;" /><blockquote><p>出现问题2：重复帧</p><ul><li>产生的原因：确认帧丢失，超时重传</li><li>解决方法：为每一个数据帧编一个序号</li><li>接收方收到重复帧后采取的措施：丢弃重复帧并且重发确认帧给发送方</li></ul></blockquote><h3 id="连续ARQ协议"><a href="#连续ARQ协议" class="headerlink" title="连续ARQ协议"></a>连续ARQ协议</h3><ul><li><code>工作原理</code>：在发送方发送完一个数据帧后，不是停下来等待确认帧，而是可以<code>连续再发送</code>若干个数据帧。如果收到了接收端的确认帧，还可以接着发送数据帧；若帧出错，则<code>重传出错的数据帧</code>以及<code>在其后发送的所有的数据帧</code></li></ul><blockquote><p>注意事项：</p><ul><li>接收端只<code>顺序</code>接收数据帧</li><li>发送方在发送完一个数据帧时都要<code>设置超时计时器</code></li><li>连续ARQ协议不一定优于停止等待协议</li></ul></blockquote><h4 id="滑动窗口"><a href="#滑动窗口" class="headerlink" title="滑动窗口"></a>滑动窗口</h4><h5 id="发送窗口"><a href="#发送窗口" class="headerlink" title="发送窗口"></a>发送窗口</h5><ul><li>用来对发送端进行流量控制</li></ul><h5 id="接收窗口"><a href="#接收窗口" class="headerlink" title="接收窗口"></a>接收窗口</h5><ul><li><p>在接收端只有当收到的数据帧的发送序号落入接收窗口内才允许将该数据帧收下</p></li><li><p>在连续 ARQ 协议中，接收窗口的大小 WR &#x3D; 1</p></li></ul><blockquote><p>当发送窗口和接收窗口的大小都等于 1时，就是停止等待协议</p></blockquote><blockquote><p>考虑：设n为发送序号所占的比特数，发送窗口的最大值能否是2^n</p><p>结论：当用n个比特进行编号时，若接收窗口的大小为1，则只有在发送窗口大小WT≤2^n-1时，连续ARQ协议才能正确运行</p></blockquote><h1 id="第五章-局域网"><a href="#第五章-局域网" class="headerlink" title="第五章 局域网"></a>第五章 局域网</h1><h2 id="数据链路层的两个子层"><a href="#数据链路层的两个子层" class="headerlink" title="数据链路层的两个子层"></a>数据链路层的两个子层</h2><ul><li>逻辑链路控制 <code>LLC</code> (Logical Link Control)子层 和 媒体接入控制 <code>MAC</code> (Medium Access Control)子层</li><li><code>与接入到传输媒体有关的内容都放在 MAC子层</code>，而 LLC 子层则与传输媒体无关</li></ul><h2 id="CSMA-x2F-CD（载波监听多点接入-x2F-碰撞检测-）方法"><a href="#CSMA-x2F-CD（载波监听多点接入-x2F-碰撞检测-）方法" class="headerlink" title="CSMA&#x2F;CD（载波监听多点接入&#x2F;碰撞检测  ）方法"></a>CSMA&#x2F;CD（载波监听多点接入&#x2F;碰撞检测  ）方法</h2><ul><li><p>“<code>多点接入</code>”表示许多计算机以多点接入的方式连接在一根总线上</p></li><li><p>“<code>载波监听</code>”是指每一个站在发送数据之前先要检测一下总线上是否有其他计算机在发送数据，如果有，则暂时不要发送数据，以免发生碰撞</p></li><li><p>“<code>碰撞检测</code>”就是计算机边发送数据边检测信道上的信号电压大小</p></li></ul><h3 id="带冲突检测的载波监听多路访问"><a href="#带冲突检测的载波监听多路访问" class="headerlink" title="带冲突检测的载波监听多路访问"></a>带冲突检测的载波监听多路访问</h3><ul><li>载波侦听</li><li>冲突检测<ul><li>在每个站发送帧期间,同时具有检测冲突的能力。一旦遇到冲突，则立即停止发送，并向总线上发一串阻塞信号，通报总线上各站点已发生冲突</li></ul></li><li>多路访问<ul><li>当检测到冲突并在发完阻塞信号后,需要等待一个随机时间，然后再用CSMA的算法重新发送</li></ul></li></ul><blockquote><p>争用方式：在总线上的每个结点都能随时发送信息，但在同一时刻只允许一对结点可以通信</p><ul><li>以太网的端到端往返时延 2τ 称为<code>争用期</code>，或<code>碰撞窗口</code>，以太网取 51.2 μs 为争用期的长度</li></ul></blockquote><blockquote><p>二进制指数类型退避算法：</p><ul><li>基本退避时间取为争用期 2τ</li><li>从整数集合[0,1,…, (2^k^ -1)]中随机地取出一个数，记为 r。重传所需的时延就是 r 倍的基本退避时间</li><li>k &#x3D; Min[重传次数, 10]</li></ul></blockquote><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221126170733228.png" alt="image-20221126170733228" style="zoom:67%;" /><h2 id="集线器"><a href="#集线器" class="headerlink" title="集线器"></a>集线器</h2><ul><li><p>使用集线器的以太网在<code>逻辑上</code>仍是一个总线网，各工作站使用的还是 CSMA&#x2F;CD 协议，并共享逻辑上的总线</p></li><li><p>它的每个接口仅仅简单转发比特，<code>不进行碰撞检测</code></p></li></ul><h2 id="MAC层"><a href="#MAC层" class="headerlink" title="MAC层"></a>MAC层</h2><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221126171322952.png" alt="image-20221126171322952" style="zoom: 67%;" /><ul><li>帧间最小间隔<ul><li>帧间最小间隔为 9.6 μs，相当于 96 bit 的发送时间</li><li>一个站在检测到总线开始空闲后，还要等待 9.6 μs 才能再次发送数据</li><li>使刚刚收到数据帧的站的接收缓存来得及清理，做好接收下一帧的准备</li></ul></li></ul><h2 id="扩展局域网"><a href="#扩展局域网" class="headerlink" title="扩展局域网"></a>扩展局域网</h2><h3 id="使用集线器（物理层）"><a href="#使用集线器（物理层）" class="headerlink" title="使用集线器（物理层）"></a>使用集线器（物理层）</h3><h4 id="优点"><a href="#优点" class="headerlink" title="优点"></a>优点</h4><ul><li>使原来属于不同碰撞域的局域网上的计算机能够进行跨碰撞域的通信</li><li>扩大了局域网覆盖的地理范围</li></ul><h4 id="缺点"><a href="#缺点" class="headerlink" title="缺点"></a>缺点</h4><ul><li>总的吞吐量并未提高</li><li>如果不同的碰撞域使用不同的数据率，那么就不能用集线器将它们互连起来</li></ul><h3 id="使用网桥（数据链路层）"><a href="#使用网桥（数据链路层）" class="headerlink" title="使用网桥（数据链路层）"></a>使用网桥（数据链路层）</h3><ul><li>根据 MAC 帧的目的地址对收到的帧进行转发</li><li>网桥具有过滤帧的功能：当网桥收到一个帧时，并不是向所有的接口转发此帧，而是先检查此帧的目的 MAC 地址，然后再确定将该帧转发到哪一个接口</li></ul><h4 id="优点-1"><a href="#优点-1" class="headerlink" title="优点"></a>优点</h4><ul><li>过滤通信量、扩大物理范围、提高可靠性</li><li>可互连不同物理层、不同 MAC 子层和不同速率的局域网</li></ul><h4 id="缺点-1"><a href="#缺点-1" class="headerlink" title="缺点"></a>缺点</h4><ul><li>存储转发增加了时延，没有流量控制功能</li><li>网桥只适合于用户数不太多(不超过几百个)和通信量不太大的局域网，否则会出现<code>广播风暴</code></li></ul><blockquote><p>网桥和集线器的不同 ：</p><ul><li>集线器在转发帧时，不对传输媒体进行检测</li><li>网桥在转发帧之前必须执行 CSMA&#x2F;CD 算法</li></ul></blockquote><h3 id="透明网桥"><a href="#透明网桥" class="headerlink" title="透明网桥"></a>透明网桥</h3><ul><li>“透明”是指局域网上的站点并不知道所发送的帧将经过哪几个网桥，因为网桥对各站来说是看不见的</li></ul><h4 id="建立转发表"><a href="#建立转发表" class="headerlink" title="建立转发表"></a>建立转发表</h4><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221126172441082.png" alt="image-20221126172441082" style="zoom:67%;" /><ul><li>若从 A 发出的帧从接口 x 进入了某网桥，那么从这个接口出发<code>沿相反方向</code>一定可把一个帧传送到 A</li><li>网桥每收到一个帧，就记下其源地址和进入网桥的接口，作为转发表中的一个项目</li><li>在建立转发表时是把帧首部中的源地址写在“地址”这一栏的下面</li><li>转发帧时，根据收到的帧首部中的目的地址转发：把在“地址”栏下面已经记下的源地址当作目的地址，把记下的进入接口当作转发接口</li><li>转发表中写入的信息除了<code>地址</code>和<code>接口</code>外，还有帧进入该网桥的<code>时间</code>。这样就可以在转发表中只保留网络拓扑的<code>最新状态信息</code></li></ul><h4 id="转发帧"><a href="#转发帧" class="headerlink" title="转发帧"></a>转发帧</h4><ol><li>查找转发表中与收到帧的目的地址有无相匹配的项目</li><li>如没有，则通过所有其他接口（但进入网桥的接口除外）按进行转发</li><li>如有，则按转发表中给出的接口进行转发</li><li>若转发表中给出的接口就是该帧进入网桥的接口，则应丢弃这个帧（因为这时不需要经过网桥进行转发）</li></ol><h4 id="生成树算法"><a href="#生成树算法" class="headerlink" title="生成树算法"></a>生成树算法</h4><ul><li>避免产生转发的帧在网络中不断地兜圈子</li><li>互连在一起的网桥在进行彼此通信后，就能找出原来的网络拓扑的一个子集。在这个子集里，整个连通的网络中不存在回路，即<code>在任何两个站之间只有一条路径</code></li></ul><h4 id="优缺点"><a href="#优缺点" class="headerlink" title="优缺点"></a>优缺点</h4><ul><li>优点：容易配置、安装，无需管理</li><li>缺点：不能保证最佳路由</li></ul><blockquote><p><em>网络交换机工作原理与网桥类似——可看成是一个多端口的高速网桥（工作在链路层上）</em></p></blockquote><h3 id="源路由网桥"><a href="#源路由网桥" class="headerlink" title="源路由网桥"></a>源路由网桥</h3><ul><li>在发送帧时<code>将详细的路由信息放在帧的首部中</code></li><li>源站以广播方式向欲通信的目的站发送一个发现帧，每个发现帧都记录所经过的路由</li><li>发现帧到达目的站时就沿各自的路由返回源站。源站在得知这些路由后，从所有可能的路由中选择出一个最佳路由</li></ul><h4 id="优缺点-1"><a href="#优缺点-1" class="headerlink" title="优缺点"></a>优缺点</h4><ul><li>优点：网桥功能可以很简单；可以用最佳路由传送</li><li>缺点：源站计算路由费时；主机负担重</li></ul><h3 id="以太网交换机"><a href="#以太网交换机" class="headerlink" title="以太网交换机"></a>以太网交换机</h3><ul><li><p>实质上就是一个<code>多接口的网桥</code></p></li><li><p>工作在<code>全双工方式</code></p></li></ul><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221126173420421.png" alt="image-20221126173420421" style="zoom:67%;" /><h4 id="总线以太网-–-gt-星形以太网"><a href="#总线以太网-–-gt-星形以太网" class="headerlink" title="总线以太网 –&gt; 星形以太网"></a>总线以太网 –&gt; 星形以太网</h4><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221126173517437.png" alt="image-20221126173517437" style="zoom:67%;" /><ul><li>总线以太网使用 CSMA&#x2F;CD 协议，以半双工方式工作</li><li>以太网交换机不使用共享总线，没有碰撞问题，因此不使用 CSMA&#x2F;CD 协议，以全双工方式工作</li><li>仍采用以太网的帧结构</li></ul><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221126173717543.png" alt="image-20221126173717543" style="zoom:67%;" /><h2 id="虚拟局域网-VLAN"><a href="#虚拟局域网-VLAN" class="headerlink" title="虚拟局域网 VLAN"></a>虚拟局域网 VLAN</h2><ul><li>由一些局域网网段构成的与物理位置无关的逻辑组</li></ul><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221126173940741.png" alt="image-20221126173940741" style="zoom:67%;" /><ul><li>虚拟局域网协议允许在以太网的帧格式中插入一个 4 字节的标识符，称为 VLAN <code>标记</code>，用来指明发送该帧的工作站属于哪一个虚拟局域网</li></ul><h1 id="第六章-网络互联"><a href="#第六章-网络互联" class="headerlink" title="第六章 网络互联"></a>第六章 网络互联</h1><h2 id="路由器"><a href="#路由器" class="headerlink" title="路由器"></a>路由器</h2><ul><li>和交换机的差别：<ul><li>建立表的方法</li><li>信息包头部的段包含的内容（路由器使用网络地址，交换机使用以太网地址）</li></ul></li></ul><h2 id="网际协议-IP"><a href="#网际协议-IP" class="headerlink" title="网际协议 IP"></a>网际协议 IP</h2><h3 id="配套协议"><a href="#配套协议" class="headerlink" title="配套协议"></a>配套协议</h3><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221127165204638.png" alt="image-20221127165204638" style="zoom:67%;" /><h3 id="网络连接设备"><a href="#网络连接设备" class="headerlink" title="网络连接设备"></a>网络连接设备</h3><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221127165620484.png" alt="image-20221127165620484" style="zoom:67%;" /><ul><li>物理层：集线器、转发器</li><li>数据链路层：交换机、网桥</li><li>网络层：路由器</li><li>网络层以上：网关</li></ul><h2 id="IP地址"><a href="#IP地址" class="headerlink" title="IP地址"></a>IP地址</h2><ul><li>在全世界范围唯一的 32 bit 的标识符</li></ul><blockquote><p>IP地址与MAC地址的区别：</p><ul><li><p>数据包的目标 IP 地址决定了数据包最终到达哪一个计算机，而目标 MAC 地址决定了该数据包下一跳要给谁，不一定是终点</p></li><li><p>交换机是基于数据帧的 MAC 地址转发数据帧，路由器是基于数据包的 IP 地址转发数据包</p></li><li><p>IP 数据包在传输过程中不变，而经过网络设备的数据帧要用新的 MAC 地址重新封装</p><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221127170919811.png" alt="image-20221127170919811" style="zoom:67%;" /></li></ul></blockquote><h3 id="编址方法"><a href="#编址方法" class="headerlink" title="编址方法"></a>编址方法</h3><h4 id="分类的IP地址"><a href="#分类的IP地址" class="headerlink" title="分类的IP地址"></a>分类的IP地址</h4><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221127171318551.png" alt="image-20221127171318551" style="zoom: 50%;" /><ul><li>每一类地址都由两个固定长度的字段组成，其中一个字段是<code>网络号 net-id</code>，它标志主机（或路由器）所连接到的网络，而另一个字段则是<code>主机号 host-id</code>，它标志该主机（或路由器）</li></ul><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221127171502800.png" alt="image-20221127171502800" style="zoom: 56%;" /><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221127172931622.png" alt="image-20221127172931622" style="zoom:60%;" /><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221127173024163.png" alt="image-20221127173024163" style="zoom:55%;" /><ul><li>IP 地址实际上是对结点上网络连接的标识</li><li>用转发器或网桥连接起来的若干个局域网仍为一个网络，因此这些局域网都具有同样的网络号 net-id</li></ul><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221127173329597.png" alt="image-20221127173329597" style="zoom: 50%;" /><h2 id="地址解析协议-ARP-和-逆地址解析协议-RARP"><a href="#地址解析协议-ARP-和-逆地址解析协议-RARP" class="headerlink" title="地址解析协议 ARP 和 逆地址解析协议 RARP"></a>地址解析协议 ARP 和 逆地址解析协议 RARP</h2><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221127174107797.png" alt="image-20221127174107797" style="zoom: 67%;" /><ul><li>每一个主机都设有一个 ARP 高速缓存(ARP cache)，<em>里面有所在的局域网上的各主机和路由器的 IP地址到硬件地址的映射表</em></li><li>ARP 是解决<code>同一个局域网</code>上的主机或路由器的 IP 地址和硬件地址的映射问题</li></ul><h2 id="IP-数据报的格式"><a href="#IP-数据报的格式" class="headerlink" title="IP 数据报的格式"></a>IP 数据报的格式</h2><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221127175216874.png" alt="image-20221127175216874" style="zoom: 60%;" /><ul><li><p>版本——占 4 bit，指IP协议的版本</p></li><li><p>首部长度——占 4 bit，可表示的最大数值是 15 个单位(一个单位为 4 字节)，因此 IP 的首部长度的最大值是60字节</p></li><li><p>服务类型——占 8 bit，用来获得更好的服务，这个字段以前一直没有被人们使用</p></li><li><p>总长度——占 16 bit，指首部和数据之和的长度，单位为字节，因此数据报的最大长度为 65535 字节。总长度必须不超过最大传送单元 MTU</p><ul><li>MTU (最大传输单元)：网络链路能承载的最大分组长度</li><li>不同的链路类型，不同的MTU</li></ul></li><li><p>标识(identification)占 16 bit，它是一个计数器，用来产生数据报的标识</p></li><li><p>标志(flag)占 3bit，只有前两位有意义</p><ul><li>MF&#x3D;1：后面”还有分片”的数据报<br>MF&#x3D;0：已是若干个数据报片中的最后一个</li><li>DF&#x3D;0：允许分片</li></ul></li><li><p>片偏移(12 bit)指出：较长的分组在分片后某片在原分组中的相对位置</p><ul><li>片偏移以 8 个字节为偏移单位</li></ul></li><li><p>生存时间(8 bit)记为 TTL (Time To Live)：数据报在网络中的寿命，其单位为秒</p></li><li><p>协议(8 bit)字段指出此数据报携带的数据使用何种协议，以便目的主机的 IP 层将数据部分上交给哪个处理过程</p></li><li><p>首部检验和(16 bit)字段只检验数据报的首部，不包括数据部分（不采用CRC）</p></li></ul><h2 id="划分子网"><a href="#划分子网" class="headerlink" title="划分子网"></a>划分子网</h2><h3 id="基本思路"><a href="#基本思路" class="headerlink" title="基本思路"></a>基本思路</h3><ul><li><p>属于<code>单位内部的事情</code>，对外仍表现为没有划分子网的网路</p></li><li><p>从主机号<code>借用</code>若干个比特作为<code>子网号</code></p><ul><li>IP地址 ::&#x3D; {&lt;网络号&gt;, &lt;子网号&gt;, &lt;主机号&gt;}</li></ul></li><li><p>划分子网后 IP 地址就变成了三级结构。划分子网只是将 IP 地址的<code>本地部分</code>进行再划分，而<code>不改变 IP 地址的因特网部分</code></p></li></ul><h3 id="子网掩码"><a href="#子网掩码" class="headerlink" title="子网掩码"></a>子网掩码</h3><ul><li><p>使用<code>子网掩码</code>可以找出 IP 地址中的子网部分</p><ul><li>(IP 地址) AND (子网掩码) &#x3D; 网络地址</li></ul></li><li><p>路由器的路由表中的每一个项目，除了要给出目的网络地址外，还必须同时给出该网络的子网掩码</p></li></ul><h3 id="路由器转发分组的算法"><a href="#路由器转发分组的算法" class="headerlink" title="路由器转发分组的算法"></a>路由器转发分组的算法</h3><ol><li>从收到的分组的首部提取目的 IP 地址 D</li><li>先用各网络的子网掩码和 D 逐比特相“与”，看是否和相应的网络地址匹配。若匹配，则将分组直接交付，否则就是间接交付</li><li>对路由表中的每一行的子网掩码和 D 逐比特相“与”，若其结果与该行的目的网络地址匹配，则将分组传送给该行指明的下一跳路由器</li></ol><h2 id="无分类编址-CIDR"><a href="#无分类编址-CIDR" class="headerlink" title="无分类编址 CIDR"></a>无分类编址 CIDR</h2><ul><li><p>CIDR使用各种长度的“<code>网络前缀</code>”(network-prefix)来代替分类地址中的网络号和子网号</p></li><li><p>IP地址 ::&#x3D; {&lt;网络前缀&gt;, &lt;主机号&gt;}</p></li><li><p>使用“<code>斜线记法</code>”，即在 IP 地址面加上一个斜线“&#x2F;”，然后写上网络前缀所占的位数</p></li><li><p>把网络前缀都相同的连续的 IP 地址组成“<code>CIDR 地址块</code>”</p><blockquote><ul><li>128.14.32.0&#x2F;20 表示的地址块共有 2^12^ 个地址（因为斜线后面的 20 是网络前缀的位数，所以这个地址的主机号是 12 位）</li><li>起始地址&#x2F;最小地址：128.14.32.0<br>            最大地址：128.14.47.255</li><li>全0 和 全1 的主机号地址一般不使用</li></ul></blockquote></li></ul><h2 id="路由选择协议✨"><a href="#路由选择协议✨" class="headerlink" title="路由选择协议✨"></a>路由选择协议✨</h2><h3 id="外部网关协议-EGP"><a href="#外部网关协议-EGP" class="headerlink" title="外部网关协议 EGP"></a>外部网关协议 EGP</h3><ul><li><p>当数据报传到一个自治系统的边界时，就需要使用一种协议将路由选择信息传递到另一个自治系统中</p></li><li><p>目前使用最多的是 BGP-4</p></li></ul><h3 id="内部网关协议-IGP"><a href="#内部网关协议-IGP" class="headerlink" title="内部网关协议 IGP"></a>内部网关协议 IGP</h3><h4 id="路由信息协议-RIP"><a href="#路由信息协议-RIP" class="headerlink" title="路由信息协议 RIP"></a>路由信息协议 RIP</h4><ul><li>基于<code>距离向量</code></li><li>网络中的每一个路由器都要维护从它自己到其他每一个目的网络的距离记录</li></ul><blockquote><p>RIP中“距离”的定义：</p><ul><li>从一个路由器到直接连接的网络的距离定义为 1</li><li>从一个路由器到非直接连接的网络的距离定义为所经过的路由器数加 1</li><li>“距离”也称为“跳数”</li><li>RIP 认为一个好的路由就是它通过的路由器的数目少，即“距离短”</li><li>允许一条路径最多只能包含 15 个路由器，“距离”的最大值为16 时即相当于不可达</li><li>不能在两个网络之间同时使用多条路由</li></ul></blockquote><h5 id="工作原理"><a href="#工作原理" class="headerlink" title="工作原理"></a>工作原理</h5><ul><li>仅和<code>相邻路由器</code>交换信息</li><li>交换的信息是本路由器当前知道的<code>到所有目的地的距离（已知最短距离）</code>，即自己的路由表（含距离）</li><li>按固定的时间间隔<code>交换路由信息</code></li><li>每个路由器根据收到的路由信息<code>更新</code>自己的路由表</li></ul><h5 id="优缺点-2"><a href="#优缺点-2" class="headerlink" title="优缺点"></a>优缺点</h5><ul><li>当网络出现故障时，要经过比较长的时间才能将此信息传送到所有的路由器</li><li>实现简单，开销较小</li><li>限制了网络的规模，它能使用的最大距离为 15</li><li>路由器之间交换的路由信息是路由器中的完整路由表，随着网络规模的扩大，开销增加</li></ul><h4 id="OSPF-Open-Shortest-Path-First"><a href="#OSPF-Open-Shortest-Path-First" class="headerlink" title="OSPF  (Open Shortest Path First)"></a>OSPF  (Open Shortest Path First)</h4><ul><li><p>如果每个路由器都知道了<code>整个网络的完整拓扑</code>，则很容易<code>计算到每个网络的最短路径，并生成路由表</code></p></li><li><p>方法：每个路由器将自己直接连接的链路情况（链路状态）广播给所有路由器</p><ul><li>“<code>链路状态</code>”就是说明本路由器都和哪些路由器相邻，以及之间链路的“<code>度量</code>”(metric)</li><li>度量由管理员配置，可代表带宽、时延、距离等</li></ul></li><li><p>只有当链路状态<code>发生变化</code>时，路由器才用洪泛法向所有路由器发送此信息</p></li><li><p>使用<code>最短路径算法</code>计算并生成路由表</p></li><li><p>每个路由器都维护了一个<code>链路状态数据库</code>。这个数据库实际上存储的就是<code>全网拓扑结构图</code></p></li></ul><h1 id="第七章-运输层"><a href="#第七章-运输层" class="headerlink" title="第七章 运输层"></a>第七章 运输层</h1><blockquote><p>主要功能：</p><ul><li>为应用进程之间提供端到端的逻辑通信</li><li>对收到的报文进行差错检测</li><li>有面向连接的 TCP 和无连接的 UDP</li></ul></blockquote><h2 id="TCP-与-UDP"><a href="#TCP-与-UDP" class="headerlink" title="TCP 与 UDP"></a>TCP 与 UDP</h2><blockquote><ul><li>两个对等运输实体在通信时传送的数据单位叫作<code>运输协议数据单元</code> TPDU</li><li>TCP 传送的数据单位协议是 <code>TCP报文段</code></li><li>UDP 传送的数据单位协议是 <code>UDP报文</code>或<code>用户数据报</code></li></ul></blockquote><h3 id="用户数据报协议-UDP"><a href="#用户数据报协议-UDP" class="headerlink" title="用户数据报协议 UDP"></a>用户数据报协议 UDP</h3><ul><li>相比IP数据报服务增加了<code>端口</code>和<code>差错检测</code>的功能</li><li>特殊的优点：<ul><li>发送数据前<code>不需要建立连接</code></li><li>主机不需要维持复杂的连接状态表</li><li>用户数据报只有8个字节的首部开销</li><li>网络出现的拥塞不会使源主机的发送速率降低，对某些实时应用很重要</li></ul></li></ul><h4 id="面向报文"><a href="#面向报文" class="headerlink" title="面向报文"></a>面向报文</h4><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221128203826491.png" alt="image-20221128203826491" style="zoom:67%;" /><h4 id="首部格式"><a href="#首部格式" class="headerlink" title="首部格式"></a>首部格式</h4><ul><li><p>首部字段有 8 个字节，由 4 个字段组成，每个字段都是两个字节</p><ul><li><table><thead><tr><th align="center">源端口</th><th align="center">目的端口</th><th align="center">长度</th><th align="center">检验和</th></tr></thead><tbody><tr><td align="center">2</td><td align="center">2</td><td align="center">2</td><td align="center">2</td></tr></tbody></table></li></ul></li><li><p>在计算检验和时，临时把“伪首部”和 UDP 用户数据报连接在一起，伪首部仅仅是为了计算检验和</p></li></ul><h3 id="传输控制协议-TCP"><a href="#传输控制协议-TCP" class="headerlink" title="传输控制协议 TCP"></a>传输控制协议 TCP</h3><ul><li>每一条 TCP 连接只能有两个<code>端点</code>，每一条 TCP 连接只能是<code>点对点</code>的<ul><li>TCP 连接的端点叫做<code>套接字</code>或<code>插口</code></li><li>端口号<code>拼接到</code> IP 地址即构成了套接字</li><li>套接字 socket &#x3D; (IP地址: 端口号)</li></ul></li><li>提供<code>可靠交付</code>的服务<ul><li>自动重传请求 ARQ</li><li>流水线传输：发送方可连续发送多个数据报文段，不必每发完一个数据报文段就停顿下来等待对方的确认</li></ul></li><li>提供<code>全双工通信</code></li><li><code>面向字节流</code></li><li>TCP 根据对方给出的窗口值和当前网络拥塞的程度来决定一个报文段应包含多少个字节</li><li>TCP 协议是面向字节， 它将所要传送的报文看成是字节组成的数据流，并使每一个字节对应于一个序号</li></ul><h4 id="首部格式-1"><a href="#首部格式-1" class="headerlink" title="首部格式"></a>首部格式</h4><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221128210352082.png" alt="image-20221128210352082" style="zoom:67%;" /><ul><li>序号字段——占 4 字节。TCP 连接中传送的数据流中的每一个字节都编上一个序号。序号字段的值则指的是本报文段所发送的数据的第一个字节的序号</li><li>确认号字段——占 4 字节，是期望收到对方的下一个报文段的数据的第一个字节的序号</li></ul><h4 id="可靠通信的具体实现"><a href="#可靠通信的具体实现" class="headerlink" title="可靠通信的具体实现"></a>可靠通信的具体实现</h4><ul><li>每一端都设有两个窗口：<code>发送窗口</code>和<code>接收窗口</code></li><li>所有的确认都<code>基于序号</code>而不是基于报文段</li><li>两端的四个窗口经常处于<code>动态变化</code>之中</li><li>往返时间 RTT <code>不是固定不变的</code></li></ul><h4 id="流量控制-1"><a href="#流量控制-1" class="headerlink" title="流量控制"></a>流量控制</h4><ul><li>利用滑动窗口机制，窗口大小的单位是<code>字节</code></li></ul><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221128212850132.png" alt="image-20221128212850132" style="zoom:67%;" /><ul><li>发送端只要收到了对方的确认，发送窗口就可前移</li><li>发送 TCP 要维护一个指针。每发送一个报文段，指针就向前移动一个报文段的距离</li></ul><h4 id="运输连接管理"><a href="#运输连接管理" class="headerlink" title="运输连接管理"></a>运输连接管理</h4><ul><li>三个阶段：连接建立、数据传送和连接释放</li></ul><h4 id="拥塞控制方法✨"><a href="#拥塞控制方法✨" class="headerlink" title="拥塞控制方法✨"></a>拥塞控制方法✨</h4><ul><li>慢开始和拥塞避免</li><li>快重传和快恢复</li></ul><h2 id="端口"><a href="#端口" class="headerlink" title="端口"></a>端口</h2><img src="E:\MarkDown笔记\通信网基础\通信网基础.assets\image-20221128203013971.png" alt="image-20221128203013971" style="zoom:67%;" /><ul><li>用一个 16 bit 端口号进行标志</li><li>只具有本地意义，即端口号只是为了标志本计算机应用层中的各进程</li></ul><p>两类端口：</p><ul><li><p>熟知端口：其数值一般为 0~1023。当一种新的应用程序出现时，必须为它指派一个熟知端口</p></li><li><p>一般端口：用来随时分配给请求通信的客户进程</p></li></ul>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>第一篇文章</title>
      <link href="/2022/12/05/2022-12-05-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/"/>
      <url>/2022/12/05/2022-12-05-%E7%AC%AC%E4%B8%80%E7%AF%87%E6%96%87%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="这是第一篇文字"><a href="#这是第一篇文字" class="headerlink" title="这是第一篇文字"></a>这是第一篇文字</h2>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
